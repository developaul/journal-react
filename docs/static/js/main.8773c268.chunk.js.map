{"version":3,"sources":["hooks/useForm.js","types/types.js","actions/ui.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","setError","err","type","payload","removeError","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","id","data","activeNote","note","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","console","error","deleteNote","login","displayName","logout","LoginScreen","useDispatch","useSelector","state","ui","loading","msgError","email","password","isFormValid","validator","isEmail","length","className","onSubmit","e","preventDefault","signInWithEmailAndPassword","user","message","startLoginEmailPassword","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","exact","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","NotesAppBar","active","style","display","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","AppRouter","checking","setChecking","isLogged","setIsLogged","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"iPAEaA,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,kBAAiCD,EAAUH,IAEnDK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAACN,EAAQG,EAAmBD,ICjB1BK,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0BCdZC,EAAW,SAAAC,GAAG,MAAK,CAC5BC,KAAMH,EACNI,QAASF,IAGAG,EAAc,iBAAO,CAC9BF,KAAMH,I,8DCKVM,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASW,KAAKC,mBChBhCC,EAAU,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,4DAEL,oDAEXC,EAAW,IAAIC,UAEZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GAPF,kBAWCK,MATN,mDASsB,CAC/BC,OAAQ,OACRC,KAAML,IAbQ,YAWZM,EAXY,QAgBTC,GAhBS,kCAiBUD,EAAKE,OAjBf,eAiBRC,EAjBQ,yBAkBPA,EAAUC,YAlBH,iCAqBX,MArBW,uGAAH,sD,QCEVC,EAAS,uCAAG,WAAMC,GAAN,iBAAAb,EAAA,sEAEGP,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsCE,MAFzC,cAEfC,EAFe,OAGjBC,EAAQ,GAEZD,EAAUE,SAAQ,SAAAC,GACdF,EAAK,sBACEA,GADF,cAGGG,GAAID,EAASC,IACVD,EAASE,aAVH,kBAedJ,GAfc,2CAAH,sDC8BTK,EAAa,SAACF,EAAIG,GAAL,MAAe,CACrCzC,KAAMH,EACNI,QAAQ,aACJqC,MACGG,KAIEC,EAAa,SAACJ,EAAIG,GAAL,MAAe,CACrCzC,KAAMH,EACNI,QAAQ,aACJqC,MACGG,KAoBEE,EAAW,SAAAR,GAAK,MAAK,CAC9BnC,KAAMH,EACNI,QAASkC,IAGAS,EAAgB,SAAAH,GAAI,8CAAI,WAAOI,EAAUC,GAAjB,iBAAA5B,EAAA,6DAEzBa,EAAQe,IAAWhC,KAAnBiB,IAEHU,EAAKM,YAAYN,EAAKM,WAErBC,EAN2B,eAMJP,IACNH,GAPU,kBAWvB3B,EAAGsC,IAAH,UAAUlB,EAAV,0BAA+BU,EAAKH,KAAMY,OAAOF,GAX1B,OAa7BH,EAASM,EAAYV,EAAKH,GAAIU,IAC1B,OAAJI,UAAI,IAAJA,SAAMC,KAAK,QAASZ,EAAKa,MAAO,WAdH,kDAkB7BC,QAAQC,MAAR,MAlB6B,0DAAJ,yDAwBpBL,EAAc,SAACb,EAAIG,GAAL,MAAe,CACtCzC,KAAMH,EACNI,QAAQ,aACJqC,MACGG,KAqDEgB,EAAa,SAAAnB,GAAE,MAAK,CAC7BtC,KAAMH,EACNI,QAASqC,ICxFAoB,EAAQ,SAAC3B,EAAK4B,GAAN,MAAuB,CACxC3D,KAAMH,EACNI,QAAS,CAAE8B,MAAK4B,iBAsBPC,EAAS,iBAAO,CACzB5D,KAAMH,ICyBKgE,EAxGK,WAEhB,IAAMhB,EAAWiB,cAFK,EAGQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAjDC,EAHc,EAGdA,QAASC,EAHK,EAGLA,SAHK,EAK2BhF,EAAQ,CACrDiF,MAAO,GACPC,SAAU,KAPQ,0BAKbD,EALa,EAKbA,MAAOC,EALM,EAKNA,SAAY5E,EALN,KAgBhB6E,EAAc,WAEhB,OAAKC,IAAUC,QAAQJ,GAGZC,EAASI,OAAS,GACzB5B,EAAS/C,EAAS,mEACX,IAGX+C,EAAS3C,MAEF,IATH2C,EAAS/C,EAAS,wBACX,IAaf,OACI,qCACI,oBAAI4E,UAAU,cAAd,mBAEA,uBACIC,SA5BQ,SAAAC,GAChBA,EAAEC,iBAEEP,KAAezB,EDdY,SAACuB,EAAOC,GAAR,8CAAqB,WAAMxB,GAAN,iBAAA3B,EAAA,sEAIpD2B,ELF2B,CAC/B7C,KAAMH,IKHkD,SAM7BM,IAASW,OAAOgE,2BAA2BV,EAAOC,GANrB,gBAM5CU,EAN4C,EAM5CA,KAERlC,EAASa,EAAMqB,EAAKhD,IAAKgD,EAAKpB,cARsB,gDAYpDP,IAAKC,KAAK,QAAS,KAAI2B,QAAS,SAZoB,yBAgBpDnC,ELV4B,CAChC7C,KAAMH,IKPkD,4EAArB,sDCcHoF,CAAwBb,EAAOC,KA0BnDK,UAAU,oDAFd,UAKKP,GAEO,qBAAKO,UAAU,oBAAf,SACKP,IAKb,uBACInE,KAAK,OACLkF,YAAY,QACZvF,KAAK,QACL+E,UAAU,cACVS,aAAa,MACbvF,MAAOwE,EACPgB,SAAU3F,IAGd,uBACIO,KAAK,WACLkF,YAAY,WACZvF,KAAK,WACL+E,UAAU,cACV9E,MAAOyE,EACPe,SAAU3F,IAGd,wBACIO,KAAK,SACL0E,UAAU,4BACVW,SAAUnB,EAHd,mBAQA,sBAAKQ,UAAU,wBAAf,UACI,2DAEA,sBACIA,UAAU,aACVY,QAnDM,kBAAMzC,EDOJ,uCAAM,WAAMA,GAAN,iBAAA3B,EAAA,+EAIPf,IAASW,OAAOyE,gBAAgB1E,GAJzB,gBAItBkE,EAJsB,EAItBA,KAERlC,EAASa,EAAMqB,EAAKhD,IAAKgD,EAAKpB,cANA,gDAU9BP,IAAKC,KAAK,QAAS,KAAI2B,QAAS,SAVF,yDAAN,wDC0CZ,UAII,qBAAKN,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcc,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGf,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CACIgB,GAAG,iBACHhB,UAAU,OAFd,uCCiBDiB,EA9GQ,WAEnB,IAAM9C,EAAWiB,cACTK,EAAaJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAxCE,SAHiB,EAKyChF,EAAQ,CACtEQ,KAAM,GACNyE,MAAO,GACPC,SAAU,GACVuB,UAAW,KATU,0BAKhBjG,EALgB,EAKhBA,KAAMyE,EALU,EAKVA,MAAOC,EALG,EAKHA,SAAUuB,EALP,EAKOA,UAAanG,EALpB,KAmBnB6E,EAAc,WAEhB,OAAK3E,EAAKkG,OAAOpB,OAGLF,IAAUC,QAAQJ,GAGnBC,IAAauB,GAAavB,EAASI,OAAS,GACnD5B,EAAS/C,EAAS,mEACX,IAGX+C,EAAS3C,MAEF,IATH2C,EAAS/C,EAAS,wBACX,IAJP+C,EAAS/C,EAAS,sBACX,IAcf,OACI,qCACI,oBAAI4E,UAAU,cAAd,sBAEA,uBACIC,SA9BW,SAAAC,GACnBA,EAAEC,iBAEEP,KAAezB,EFMuB,SAACuB,EAAOC,EAAU1E,GAAlB,8CAA2B,WAAMkD,GAAN,iBAAA3B,EAAA,+EAI9Cf,IAASW,OAAOgF,+BAA+B1B,EAAOC,GAJR,uBAI7DU,EAJ6D,EAI7DA,KAJ6D,SAK/DA,EAAKgB,cAAc,CAAEpC,YAAahE,IAL6B,OAOrEkD,EAASa,EAAMqB,EAAKhD,IAAKgD,EAAKpB,cAPuC,kDAWrEP,IAAKC,KAAK,QAAS,KAAI2B,QAAS,SAXqC,0DAA3B,sDENdgB,CAAmC5B,EAAOC,EAAU1E,KA4BxE+E,UAAU,oDAFd,UAKKP,GAEO,qBAAKO,UAAU,oBAAf,SACKP,IAKb,uBACInE,KAAK,OACLkF,YAAY,OACZvF,KAAK,OACL+E,UAAU,cACVS,aAAa,MACbvF,MAAOD,EACPyF,SAAU3F,IAGd,uBACIO,KAAK,OACLkF,YAAY,QACZvF,KAAK,QACL+E,UAAU,cACVS,aAAa,MACbvF,MAAOwE,EACPgB,SAAU3F,IAGd,uBACIO,KAAK,WACLkF,YAAY,WACZvF,KAAK,WACL+E,UAAU,cACV9E,MAAOyE,EACPe,SAAU3F,IAGd,uBACIO,KAAK,WACLkF,YAAY,mBACZvF,KAAK,YACL+E,UAAU,cACV9E,MAAOgG,EACPR,SAAU3F,IAGd,wBACIO,KAAK,SACL0E,UAAU,iCAFd,sBAOA,cAAC,IAAD,CACIgB,GAAG,cACHhB,UAAU,OAFd,wCCzFDuB,EAdI,WACf,OACI,qBAAKvB,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwB,KAAK,cAAcC,OAAK,EAACC,UAAWvC,IAC3C,cAAC,IAAD,CAAOqC,KAAK,iBAAiBC,OAAK,EAACC,UAAWT,IAC9C,cAAC,IAAD,CAAUD,GAAG,wB,QCclBW,EAvBM,SAAC,GAIf,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,+CAEF,OACI,cAAC,IAAD,2BACQA,GADR,IAEIJ,UAAW,SAAAK,GAAK,OACXH,EACK,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUf,GAAG,qBCYpBgB,GAtBK,SAAC,GAId,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,+CACF,OACI,cAAC,IAAD,2BACQA,GADR,IAEIJ,UAAW,SAAAK,GAAK,OACXH,EACK,cAAC,IAAD,CAAUZ,GAAG,MACb,cAACa,EAAD,eAAeE,SCqCtBE,GAlDK,WAEhB,IAAM9D,EAAWiB,cAET8C,EAAW7C,aAAY,SAAAC,GAAK,OAAIA,EAAM7B,SAAtCyE,OAgBR,OACI,sBAAKlC,UAAU,gBAAf,UACI,8CAEA,uBACIpC,GAAG,eACHtC,KAAK,OACLL,KAAK,OACLkH,MAAO,CAAEC,QAAS,QAClB1B,SAjBa,SAAAR,GAAM,IAEpB3D,EAFmB,YAEX2D,EAAElF,OAAOqH,MAFE,MAItB9F,GAAM4B,EPiFY,SAAA5B,GAAI,8CAAI,WAAO4B,EAAUC,GAAjB,iBAAA5B,EAAA,6DAElBsB,EAAeM,IAAWX,MAAlCyE,OAEJ,OAAJxD,UAAI,IAAJA,SAAMC,KAAK,CACPC,MAAO,eACP0D,KAAM,iBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,aAAc,WACV/D,IAAKgE,iBAVqB,kBAgBRpG,EAAWC,GAhBH,OAgBxBoG,EAhBwB,OAiB9B7E,EAAWO,IAAMsE,EAEjBxE,EAASD,EAAcJ,IAEvBY,IAAKkE,QArByB,kDAyB9B/D,QAAQC,MAAR,MAzB8B,0DAAJ,wDOjFP+D,CAAetG,OAgB9B,gCACI,wBACIyD,UAAU,MACVY,QA3BW,WACvBkC,SAASC,cAAc,iBAAiBC,SAwBhC,qBAOA,wBAAQhD,UAAU,MACdY,QAnCG,kBAAMzC,EAASD,EAAcgE,KAkCpC,yBCyCDe,GA7EI,WAEf,IAAM9E,EAAWiB,cAEDrB,EAASsB,aAAY,SAAAC,GAAK,OAAIA,EAAM7B,SAA5CyE,OAJa,EAM0BzH,EAAQsD,GANlC,mBAMdmF,EANc,KAMFnI,EANE,KAMiBD,EANjB,KAQb8D,EAAoBsE,EAApBtE,MAAO9B,EAAaoG,EAAbpG,KAAMc,EAAOsF,EAAPtF,GAEfuF,EAAWC,iBAAOrF,EAAKH,IAE7ByF,qBAAU,WAEFtF,EAAKH,KAAOuF,EAASG,UACrBxI,EAAMiD,GACNoF,EAASG,QAAUvF,EAAKH,MAG7B,CAACG,EAAMjD,IAEVuI,qBAAU,WAENlF,EAASL,EAAWoF,EAAWtF,GAAZ,eAAqBsF,OAEzC,CAACA,EAAY/E,IAMhB,OACI,sBAAK6B,UAAU,wEAAf,UACI,cAAC,GAAD,IAEA,sBAAKA,UAAU,iBAAf,UACI,uBACI1E,KAAK,OACLkF,YAAY,qBACZR,UAAU,qBACVS,aAAa,MACbxF,KAAK,QACLC,MAAO0D,EACP8B,SAAU3F,IAGd,0BACIyF,YAAY,sBACZR,UAAU,kBACV/E,KAAK,OACLC,MAAO4B,EACP4D,SAAU3F,IAITgD,EAAKM,KAEF,qBAAK2B,UAAU,gBAAf,SACI,qBACIc,IAAK/C,EAAKM,IACV0C,IAAI,0BAOxB,qBACIf,UAAU,iBACVY,QA1CS,WACjBzC,ERgGqB,SAAAP,GAAE,8CAAI,WAAOO,EAAUC,GAAjB,eAAA5B,EAAA,6DAEvBa,EAAQe,IAAWhC,KAAnBiB,IAFuB,kBAMrBpB,EAAGsC,IAAH,UAAUlB,EAAV,0BAA+BO,IAAM2F,SANhB,OAQ3BpF,EAASY,EAAWnB,IARO,gDAY3BiB,QAAQC,MAAR,MAZ2B,yDAAJ,wDQhGd0E,CAAc5F,KAuCnB,wBC3DG6F,GAdS,WACpB,OACI,sBAAKzD,UAAU,wBAAf,UACI,iDAEI,uBAFJ,yBAMA,mBAAGA,UAAU,+B,oBC2CV0D,GAjDM,SAAC,GAAoC,IAAlC5G,EAAiC,EAAjCA,KAAM6G,EAA2B,EAA3BA,KAAM/E,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,IAAKT,EAAS,EAATA,GAEtCO,EAAWiB,cAEXwE,EAAWC,KAAOF,GASxB,OACI,sBACI3D,UAAU,2EACVY,QAViB,kBAAMzC,EAASL,EAAWF,EAAI,CACnDgB,QACA9B,OACAuB,MACAsF,WAIA,UAMStF,GAEG,qBACI2B,UAAU,yBACVmC,MAAO,CACH2B,eAAgB,QAChBC,gBAAgB,OAAD,OAAS1F,EAAT,QAM/B,sBAAK2B,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACKpB,IAEL,mBAAGoB,UAAU,yBAAb,SACKlD,OAIT,sBAAKkD,UAAU,0BAAf,UACI,+BAAO4D,EAASI,OAAO,UACvB,6BAAKJ,EAASI,OAAO,eC1BtBC,GAlBQ,WAAO,IAElBxG,EAAU4B,aAAY,SAAAC,GAAK,OAAIA,EAAM7B,SAArCA,MAER,OACI,qBAAKuC,UAAU,mBAAf,SAEQvC,EAAMyG,KAAI,SAAAnG,GAAI,OACV,cAAC,GAAD,eAEQA,GADCA,EAAKH,UCkCnBuG,GAxCC,WAEZ,IAAMhG,EAAWiB,cACTnE,EAASoE,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,QAApCnB,KAQR,OACI,wBAAO+E,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAQ/E,QAGZ,wBACI+E,UAAU,WACVY,QAhBK,kBAAMzC,EX0DJ,uCAAM,WAAMA,GAAN,SAAA3B,EAAA,+EAInBf,IAASW,OAAOgI,UAJG,OAMzBjG,EAASe,KAETf,ED6E0B,CAC9B7C,KAAMH,ICtFuB,gDAYzB0D,QAAQC,MAAR,MAZyB,yDAAN,wDW5CX,uBAQJ,sBACIkB,UAAU,qBACVY,QAtBS,WACjBzC,EZTqB,uCAAM,WAAOA,EAAUC,GAAjB,mBAAA5B,EAAA,6DAEvBa,EAAQe,IAAWhC,KAAnBiB,IAEFgH,EAAU,CACZzF,MAAO,GACP9B,KAAM,GACN6G,MAAM,IAAIW,MAAOC,WAPU,kBAYTtI,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsCmH,IAAIH,GAZjC,OAYrB9F,EAZqB,OAc3BJ,EAASL,EAAWS,EAAIX,GAAIyG,IAE5BlG,EAASH,EAAWO,EAAIX,GAAIyG,IAhBD,kDAoB3BxF,QAAQC,MAAR,MApB2B,0DAAN,0DY4BjB,UAII,mBAAGkB,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAGJ,cAAC,GAAD,QCdGyE,GArBO,WAAO,IAEjBvC,EAAW7C,aAAY,SAAAC,GAAK,OAAIA,EAAM7B,SAAtCyE,OAER,OACI,sBACIlC,UAAU,0EADd,UAGI,cAAC,GAAD,IAEA,+BAESkC,EACM,cAAC,GAAD,IACA,cAAC,GAAD,UCJdwC,GAAY,WAErB,IAAMvG,EAAWiB,cAFU,EAIKzE,oBAAS,GAJd,mBAIpBgK,EAJoB,KAIVC,EAJU,OAKKjK,oBAAS,GALd,mBAKpBkK,EALoB,KAKVC,EALU,KA8B3B,OAvBAzB,qBAAU,WAEN5H,IAASW,OAAO2I,oBAAmB,SAAA1E,GdsBV,IAAAhD,GcpBrB,OAAIgD,QAAJ,IAAIA,OAAJ,EAAIA,EAAMhD,MAENc,EAASa,EAAMqB,EAAKhD,IAAKgD,EAAKpB,cAE9B6F,GAAY,GAEZ3G,GdciBd,EcdUgD,EAAKhD,IdcZ,uCAAI,WAAMc,GAAN,eAAA3B,EAAA,+EAIZY,EAAUC,GAJE,OAI1BI,EAJ0B,OAMhCU,EAASF,EAASR,IANc,gDAUhCoB,QAAQC,MAAR,MAVgC,yDAAJ,yDcVpBgG,GAAY,GAIhBF,GAAY,QAGjB,CAACzG,EAAUyG,EAAaE,IAEvBH,EAAiB,yCAGjB,cAAC,IAAD,UACI,mCACI,eAAC,IAAD,WACI,cAAC,GAAD,CACInD,KAAK,QACLE,UAAWH,EACXK,gBAAiBiD,IAGrB,cAAC,EAAD,CACIpD,OAAK,EACLD,KAAK,IACLE,UAAW+C,GACX7C,gBAAiBiD,IAGrB,cAAC,IAAD,CAAU7D,GAAG,wB,kBChE3BtG,GAAe,CACjB8E,SAAS,EACTC,SAAU,MCFR/E,GAAe,CACjB+C,MAAO,GACPyE,OAAQ,MCGN8C,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BjJ,KCRuB,WAAyB,IAAxBkD,EAAuB,uDAAf,GAAIgG,EAAW,uCAE/C,OAAQA,EAAOhK,MACX,KAAKH,EACD,MAAO,CACHkC,IAAKiI,EAAO/J,QAAQ8B,IACpBpC,KAAMqK,EAAO/J,QAAQ0D,aAG7B,KAAK9D,EACD,MAAO,GAEX,QACI,OAAOmE,IDJfC,GFJqB,WAAmC,IAAlCD,EAAiC,uDAAzB5E,GAAc4K,EAAW,uCAEvD,OAAQA,EAAOhK,MACX,KAAKH,EACD,OAAO,2BACAmE,GADP,IAEIG,SAAU6F,EAAO/J,UAGzB,KAAKJ,EACD,OAAO,2BACAmE,GADP,IAEIG,SAAU,OAGlB,KAAKtE,EACD,OAAO,2BACAmE,GADP,IAEIE,SAAS,IAGjB,KAAKrE,EACD,OAAO,2BACAmE,GADP,IAEIE,SAAS,IAGjB,QACI,OAAOF,IEvBf7B,MDLwB,WAAmC,IAAlC6B,EAAiC,uDAAzB5E,GAAc4K,EAAW,uCAE1D,OAAQA,EAAOhK,MAEX,KAAKH,EACD,OAAO,2BACAmE,GADP,IAEI7B,MAAM,CAAE6H,EAAO/J,SAAV,mBAAsB+D,EAAM7B,UAGzC,KAAKtC,EACD,OAAO,2BACAmE,GADP,IAEI4C,OAAO,eACAoD,EAAO/J,WAItB,KAAKJ,EACD,OAAO,2BACAmE,GADP,IAEI7B,MAAM,YAAK6H,EAAO/J,WAG1B,KAAKJ,EACD,OAAO,2BACAmE,GADP,IAEI7B,MAAO6B,EAAM7B,MAAMyG,KAAI,SAAAnG,GAAI,OAAIA,EAAKH,KAAO0H,EAAO/J,QAAQqC,GAAK0H,EAAO/J,QAAUwC,OAGxF,KAAK5C,EACD,OAAO,2BACAmE,GADP,IAEI4C,OAAQ,KACRzE,MAAO6B,EAAM7B,MAAM8H,QAAO,SAAAxH,GAAI,OAAIA,EAAKH,KAAO0H,EAAO/J,aAG7D,KAAKJ,EACD,OAAO,2BACAmE,GADP,IAEI4C,OAAQ,KACRzE,MAAO,KAGf,QACI,OAAO6B,MCrCNkG,GAAQC,aACjBL,GACAJ,GACIU,aAAgBC,QEHTC,GARI,WACf,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCHZK,IAASC,OACP,cAAC,GAAD,IACAhD,SAASiD,eAAe,W","file":"static/js/main.8773c268.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => setValues(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    noteslogoutCleaning: '[Notes] Logout Cleaning'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = err => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCvNS6V-q1iuV2WjW3Gb1E-Ik_H--7VuNQ\",\r\n    authDomain: \"journal-app-653df.firebaseapp.com\",\r\n    projectId: \"journal-app-653df\",\r\n    storageBucket: \"journal-app-653df.appspot.com\",\r\n    messagingSenderId: \"755264379787\",\r\n    appId: \"1:755264379787:web:6d0efc011310d0aef72d8e\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const fileUpload = async file => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dithorrb8/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n\r\n        return null;\r\n\r\n    } catch (err) {\r\n\r\n        throw err;\r\n\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async uid => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    let notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes = [\r\n            ...notes,\r\n            {\r\n                id: snapHijo.id,\r\n                ...snapHijo.data()\r\n            }\r\n        ];\r\n    });\r\n\r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\nexport const startNewNotes = () => async (dispatch, getState) => {\r\n\r\n    const { uid } = getState().auth;\r\n\r\n    const newNote = {\r\n        title: '',\r\n        body: '',\r\n        date: new Date().getTime()\r\n    }\r\n\r\n    try {\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = uid => async dispatch => {\r\n\r\n    try {\r\n\r\n        const notes = await loadNotes(uid);\r\n\r\n        dispatch(setNotes(notes));\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setNotes = notes => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = note => async (dispatch, getState) => {\r\n\r\n    const { uid } = getState().auth;\r\n\r\n    if (!note.url) delete note.url;\r\n\r\n    const noteToFireStore = { ...note };\r\n    delete noteToFireStore.id;\r\n\r\n    try {\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFireStore));\r\n        Swal?.fire('Saved', note.title, 'success');\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startUploading = file => async (dispatch, getState) => {\r\n\r\n    const { active: activeNote } = getState().notes;\r\n\r\n    Swal?.fire({\r\n        title: 'Uploading...',\r\n        text: 'Please wait...',\r\n        allowOutsideClick: false,\r\n        showConfirmButton: false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n        }\r\n    });\r\n\r\n    try {\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleting = id => async (dispatch, getState) => {\r\n\r\n    const { uid } = getState().auth;\r\n\r\n    try {\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteNote = id => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteslogout = () => ({\r\n    type: types.noteslogoutCleaning\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\n\r\nimport { startLoading, finishLoading } from './ui';\r\n\r\nimport { types } from '../types/types';\r\nimport { noteslogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => async dispatch => {\r\n\r\n    try {\r\n\r\n        dispatch(startLoading());\r\n\r\n        const { user } = await firebase.auth().signInWithEmailAndPassword(email, password);\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n    } catch (err) {\r\n\r\n        Swal.fire('Error', err.message, 'error');\r\n\r\n    } finally {\r\n\r\n        dispatch(finishLoading());\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => async dispatch => {\r\n\r\n    try {\r\n\r\n        const { user } = await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n        await user.updateProfile({ displayName: name });\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n    } catch (err) {\r\n\r\n        Swal.fire('Error', err.message, 'error');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const { user } = await firebase.auth().signInWithPopup(googleAuthProvider);\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n    } catch (err) {\r\n\r\n        Swal.fire('Error', err.message, 'error');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: { uid, displayName }\r\n});\r\n\r\n\r\nexport const startLogout = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n\r\n        dispatch(noteslogout());\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector(state => state.ui);\r\n\r\n    const [{ email, password }, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleGoogleLogin = () => dispatch(startGoogleLogin());\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-primary\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [{ name, email, password, password2 }, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (!name.trim().length) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form\r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-primary mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport RegisterScreen from '../components/auth/RegisterScreen'\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" exact component={LoginScreen} />\r\n                    <Route path=\"/auth/register\" exact component={RegisterScreen} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={props => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={props => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component {...props} />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nconst NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => dispatch(startSaveNote(active));\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = e => {\r\n\r\n        const [file] = e.target.files;\r\n\r\n        if (file) dispatch(startUploading(file));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>23/01/2021</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesAppBar\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport NotesAppBar from './NotesAppBar';\r\n\r\nconst NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const { title, body, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id, { ...formValues }));\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"what happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (\r\n                        <div className=\"notes__images\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt=\"Imagen de google\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteScreen\r\n","import React from 'react'\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingSelected\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nconst JournalEntry = ({ body, date, title, url, id }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => dispatch(activeNote(id, {\r\n        title,\r\n        body,\r\n        url,\r\n        date\r\n    }));\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                (url) &&\r\n                (\r\n                    <div\r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url(${url})`\r\n                        }}\r\n                    ></div>\r\n                )\r\n            }\r\n\r\n            <div className=\"journal__entry-body\" >\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntry;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport JournalEntry from './JournalEntry';\r\n\r\nconst JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntries\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNotes } from '../../actions/notes';\r\nimport JournalEntries from './JournalEntries';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => dispatch(startLogout());\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNotes());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn mt-5\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport NoteScreen from '../notes/NoteScreen'\r\nimport NothingSelected from './NothingSelected'\r\nimport Sidebar from './Sidebar'\r\n\r\nconst JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalScreen\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport AuthRouter from './AuthRouter';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport JournalScreen from '../components/journal/JournalScreen';\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n\r\n            if (user?.uid) {\r\n\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                setIsLogged(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else {\r\n\r\n                setIsLogged(false);\r\n\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLogged]);\r\n\r\n    if (checking) return <h1>Wait...</h1>;\r\n\r\n    return (\r\n        <Router>\r\n            <>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLogged}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLogged}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            };\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            };\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            };\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => note.id === action.payload.id ? action.payload : note)\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            };\r\n\r\n        case types.noteslogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <Provider store={store} >\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport JournalApp from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}